//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Project_Gym.DBOperations {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DBOperationsSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Task))]
    public partial class DBOperations : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddNewMuscleAPIOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewMuscleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMuscleAPIOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMuscleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewExerciseAPIOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewExerciseOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteExerciseAPIOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteExerciseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllExercisesAPIOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllExercisesOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditExerciseAPIAsyncOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditExerciseAsyncOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditMuscleAPIAsyncOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditMuscleAsyncOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DBOperations() {
            this.Url = global::Project_Gym.Properties.Settings.Default.Project_Gym_DBOperations_DBOperations;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddNewMuscleAPICompletedEventHandler AddNewMuscleAPICompleted;
        
        /// <remarks/>
        public event AddNewMuscleCompletedEventHandler AddNewMuscleCompleted;
        
        /// <remarks/>
        public event DeleteMuscleAPICompletedEventHandler DeleteMuscleAPICompleted;
        
        /// <remarks/>
        public event DeleteMuscleCompletedEventHandler DeleteMuscleCompleted;
        
        /// <remarks/>
        public event AddNewExerciseAPICompletedEventHandler AddNewExerciseAPICompleted;
        
        /// <remarks/>
        public event AddNewExerciseCompletedEventHandler AddNewExerciseCompleted;
        
        /// <remarks/>
        public event DeleteExerciseAPICompletedEventHandler DeleteExerciseAPICompleted;
        
        /// <remarks/>
        public event DeleteExerciseCompletedEventHandler DeleteExerciseCompleted;
        
        /// <remarks/>
        public event GetAllExercisesAPICompletedEventHandler GetAllExercisesAPICompleted;
        
        /// <remarks/>
        public event GetAllExercisesCompletedEventHandler GetAllExercisesCompleted;
        
        /// <remarks/>
        public event EditExerciseAPIAsyncCompletedEventHandler EditExerciseAPIAsyncCompleted;
        
        /// <remarks/>
        public event EditExerciseAsyncCompletedEventHandler EditExerciseAsyncCompleted;
        
        /// <remarks/>
        public event EditMuscleAPIAsyncCompletedEventHandler EditMuscleAPIAsyncCompleted;
        
        /// <remarks/>
        public event EditMuscleAsyncCompletedEventHandler EditMuscleAsyncCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddNewMuscleAPI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddNewMuscleAPI(string muscleName, string description, int muscleGroup) {
            object[] results = this.Invoke("AddNewMuscleAPI", new object[] {
                        muscleName,
                        description,
                        muscleGroup});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewMuscleAPIAsync(string muscleName, string description, int muscleGroup) {
            this.AddNewMuscleAPIAsync(muscleName, description, muscleGroup, null);
        }
        
        /// <remarks/>
        public void AddNewMuscleAPIAsync(string muscleName, string description, int muscleGroup, object userState) {
            if ((this.AddNewMuscleAPIOperationCompleted == null)) {
                this.AddNewMuscleAPIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewMuscleAPIOperationCompleted);
            }
            this.InvokeAsync("AddNewMuscleAPI", new object[] {
                        muscleName,
                        description,
                        muscleGroup}, this.AddNewMuscleAPIOperationCompleted, userState);
        }
        
        private void OnAddNewMuscleAPIOperationCompleted(object arg) {
            if ((this.AddNewMuscleAPICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewMuscleAPICompleted(this, new AddNewMuscleAPICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddNewMuscle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddNewMuscle(string muscleName, string description, int muscleGroup) {
            object[] results = this.Invoke("AddNewMuscle", new object[] {
                        muscleName,
                        description,
                        muscleGroup});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewMuscleAsync(string muscleName, string description, int muscleGroup) {
            this.AddNewMuscleAsync(muscleName, description, muscleGroup, null);
        }
        
        /// <remarks/>
        public void AddNewMuscleAsync(string muscleName, string description, int muscleGroup, object userState) {
            if ((this.AddNewMuscleOperationCompleted == null)) {
                this.AddNewMuscleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewMuscleOperationCompleted);
            }
            this.InvokeAsync("AddNewMuscle", new object[] {
                        muscleName,
                        description,
                        muscleGroup}, this.AddNewMuscleOperationCompleted, userState);
        }
        
        private void OnAddNewMuscleOperationCompleted(object arg) {
            if ((this.AddNewMuscleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewMuscleCompleted(this, new AddNewMuscleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteMuscleAPI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteMuscleAPI(int muscleId) {
            object[] results = this.Invoke("DeleteMuscleAPI", new object[] {
                        muscleId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMuscleAPIAsync(int muscleId) {
            this.DeleteMuscleAPIAsync(muscleId, null);
        }
        
        /// <remarks/>
        public void DeleteMuscleAPIAsync(int muscleId, object userState) {
            if ((this.DeleteMuscleAPIOperationCompleted == null)) {
                this.DeleteMuscleAPIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMuscleAPIOperationCompleted);
            }
            this.InvokeAsync("DeleteMuscleAPI", new object[] {
                        muscleId}, this.DeleteMuscleAPIOperationCompleted, userState);
        }
        
        private void OnDeleteMuscleAPIOperationCompleted(object arg) {
            if ((this.DeleteMuscleAPICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMuscleAPICompleted(this, new DeleteMuscleAPICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteMuscle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteMuscle(int muscleId) {
            object[] results = this.Invoke("DeleteMuscle", new object[] {
                        muscleId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMuscleAsync(int muscleId) {
            this.DeleteMuscleAsync(muscleId, null);
        }
        
        /// <remarks/>
        public void DeleteMuscleAsync(int muscleId, object userState) {
            if ((this.DeleteMuscleOperationCompleted == null)) {
                this.DeleteMuscleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMuscleOperationCompleted);
            }
            this.InvokeAsync("DeleteMuscle", new object[] {
                        muscleId}, this.DeleteMuscleOperationCompleted, userState);
        }
        
        private void OnDeleteMuscleOperationCompleted(object arg) {
            if ((this.DeleteMuscleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMuscleCompleted(this, new DeleteMuscleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddNewExerciseAPI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddNewExerciseAPI(string exerciseName, string exerciseDesc, double difficulty, int timeToComplete, int muscleId) {
            object[] results = this.Invoke("AddNewExerciseAPI", new object[] {
                        exerciseName,
                        exerciseDesc,
                        difficulty,
                        timeToComplete,
                        muscleId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewExerciseAPIAsync(string exerciseName, string exerciseDesc, double difficulty, int timeToComplete, int muscleId) {
            this.AddNewExerciseAPIAsync(exerciseName, exerciseDesc, difficulty, timeToComplete, muscleId, null);
        }
        
        /// <remarks/>
        public void AddNewExerciseAPIAsync(string exerciseName, string exerciseDesc, double difficulty, int timeToComplete, int muscleId, object userState) {
            if ((this.AddNewExerciseAPIOperationCompleted == null)) {
                this.AddNewExerciseAPIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewExerciseAPIOperationCompleted);
            }
            this.InvokeAsync("AddNewExerciseAPI", new object[] {
                        exerciseName,
                        exerciseDesc,
                        difficulty,
                        timeToComplete,
                        muscleId}, this.AddNewExerciseAPIOperationCompleted, userState);
        }
        
        private void OnAddNewExerciseAPIOperationCompleted(object arg) {
            if ((this.AddNewExerciseAPICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewExerciseAPICompleted(this, new AddNewExerciseAPICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddNewExercise", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddNewExercise(string exerciseName, string exerciseDesc, double difficulty, int timeToComplete, int muscleId) {
            object[] results = this.Invoke("AddNewExercise", new object[] {
                        exerciseName,
                        exerciseDesc,
                        difficulty,
                        timeToComplete,
                        muscleId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewExerciseAsync(string exerciseName, string exerciseDesc, double difficulty, int timeToComplete, int muscleId) {
            this.AddNewExerciseAsync(exerciseName, exerciseDesc, difficulty, timeToComplete, muscleId, null);
        }
        
        /// <remarks/>
        public void AddNewExerciseAsync(string exerciseName, string exerciseDesc, double difficulty, int timeToComplete, int muscleId, object userState) {
            if ((this.AddNewExerciseOperationCompleted == null)) {
                this.AddNewExerciseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewExerciseOperationCompleted);
            }
            this.InvokeAsync("AddNewExercise", new object[] {
                        exerciseName,
                        exerciseDesc,
                        difficulty,
                        timeToComplete,
                        muscleId}, this.AddNewExerciseOperationCompleted, userState);
        }
        
        private void OnAddNewExerciseOperationCompleted(object arg) {
            if ((this.AddNewExerciseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewExerciseCompleted(this, new AddNewExerciseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteExerciseAPI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteExerciseAPI(int exerciseId) {
            object[] results = this.Invoke("DeleteExerciseAPI", new object[] {
                        exerciseId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteExerciseAPIAsync(int exerciseId) {
            this.DeleteExerciseAPIAsync(exerciseId, null);
        }
        
        /// <remarks/>
        public void DeleteExerciseAPIAsync(int exerciseId, object userState) {
            if ((this.DeleteExerciseAPIOperationCompleted == null)) {
                this.DeleteExerciseAPIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteExerciseAPIOperationCompleted);
            }
            this.InvokeAsync("DeleteExerciseAPI", new object[] {
                        exerciseId}, this.DeleteExerciseAPIOperationCompleted, userState);
        }
        
        private void OnDeleteExerciseAPIOperationCompleted(object arg) {
            if ((this.DeleteExerciseAPICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteExerciseAPICompleted(this, new DeleteExerciseAPICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteExercise", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteExercise(int exerciseId) {
            object[] results = this.Invoke("DeleteExercise", new object[] {
                        exerciseId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteExerciseAsync(int exerciseId) {
            this.DeleteExerciseAsync(exerciseId, null);
        }
        
        /// <remarks/>
        public void DeleteExerciseAsync(int exerciseId, object userState) {
            if ((this.DeleteExerciseOperationCompleted == null)) {
                this.DeleteExerciseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteExerciseOperationCompleted);
            }
            this.InvokeAsync("DeleteExercise", new object[] {
                        exerciseId}, this.DeleteExerciseOperationCompleted, userState);
        }
        
        private void OnDeleteExerciseOperationCompleted(object arg) {
            if ((this.DeleteExerciseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteExerciseCompleted(this, new DeleteExerciseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllExercisesAPI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllExercisesAPI() {
            object[] results = this.Invoke("GetAllExercisesAPI", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllExercisesAPIAsync() {
            this.GetAllExercisesAPIAsync(null);
        }
        
        /// <remarks/>
        public void GetAllExercisesAPIAsync(object userState) {
            if ((this.GetAllExercisesAPIOperationCompleted == null)) {
                this.GetAllExercisesAPIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllExercisesAPIOperationCompleted);
            }
            this.InvokeAsync("GetAllExercisesAPI", new object[0], this.GetAllExercisesAPIOperationCompleted, userState);
        }
        
        private void OnGetAllExercisesAPIOperationCompleted(object arg) {
            if ((this.GetAllExercisesAPICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllExercisesAPICompleted(this, new GetAllExercisesAPICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllExercises", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllExercises() {
            object[] results = this.Invoke("GetAllExercises", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllExercisesAsync() {
            this.GetAllExercisesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllExercisesAsync(object userState) {
            if ((this.GetAllExercisesOperationCompleted == null)) {
                this.GetAllExercisesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllExercisesOperationCompleted);
            }
            this.InvokeAsync("GetAllExercises", new object[0], this.GetAllExercisesOperationCompleted, userState);
        }
        
        private void OnGetAllExercisesOperationCompleted(object arg) {
            if ((this.GetAllExercisesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllExercisesCompleted(this, new GetAllExercisesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EditExerciseAPIAsync", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaskOfBoolean EditExerciseAPIAsync(int exerciseId, string exerciseName, string exerciseDesc, double difficulty, int timeToComplete) {
            object[] results = this.Invoke("EditExerciseAPIAsync", new object[] {
                        exerciseId,
                        exerciseName,
                        exerciseDesc,
                        difficulty,
                        timeToComplete});
            return ((TaskOfBoolean)(results[0]));
        }
        
        /// <remarks/>
        public void EditExerciseAPIAsyncAsync(int exerciseId, string exerciseName, string exerciseDesc, double difficulty, int timeToComplete) {
            this.EditExerciseAPIAsyncAsync(exerciseId, exerciseName, exerciseDesc, difficulty, timeToComplete, null);
        }
        
        /// <remarks/>
        public void EditExerciseAPIAsyncAsync(int exerciseId, string exerciseName, string exerciseDesc, double difficulty, int timeToComplete, object userState) {
            if ((this.EditExerciseAPIAsyncOperationCompleted == null)) {
                this.EditExerciseAPIAsyncOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditExerciseAPIAsyncOperationCompleted);
            }
            this.InvokeAsync("EditExerciseAPIAsync", new object[] {
                        exerciseId,
                        exerciseName,
                        exerciseDesc,
                        difficulty,
                        timeToComplete}, this.EditExerciseAPIAsyncOperationCompleted, userState);
        }
        
        private void OnEditExerciseAPIAsyncOperationCompleted(object arg) {
            if ((this.EditExerciseAPIAsyncCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditExerciseAPIAsyncCompleted(this, new EditExerciseAPIAsyncCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EditExerciseAsync", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaskOfBoolean EditExerciseAsync(int exerciseId, string exerciseName, string exerciseDesc, double difficulty, int timeToComplete) {
            object[] results = this.Invoke("EditExerciseAsync", new object[] {
                        exerciseId,
                        exerciseName,
                        exerciseDesc,
                        difficulty,
                        timeToComplete});
            return ((TaskOfBoolean)(results[0]));
        }
        
        /// <remarks/>
        public void EditExerciseAsyncAsync(int exerciseId, string exerciseName, string exerciseDesc, double difficulty, int timeToComplete) {
            this.EditExerciseAsyncAsync(exerciseId, exerciseName, exerciseDesc, difficulty, timeToComplete, null);
        }
        
        /// <remarks/>
        public void EditExerciseAsyncAsync(int exerciseId, string exerciseName, string exerciseDesc, double difficulty, int timeToComplete, object userState) {
            if ((this.EditExerciseAsyncOperationCompleted == null)) {
                this.EditExerciseAsyncOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditExerciseAsyncOperationCompleted);
            }
            this.InvokeAsync("EditExerciseAsync", new object[] {
                        exerciseId,
                        exerciseName,
                        exerciseDesc,
                        difficulty,
                        timeToComplete}, this.EditExerciseAsyncOperationCompleted, userState);
        }
        
        private void OnEditExerciseAsyncOperationCompleted(object arg) {
            if ((this.EditExerciseAsyncCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditExerciseAsyncCompleted(this, new EditExerciseAsyncCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EditMuscleAPIAsync", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaskOfBoolean EditMuscleAPIAsync(int muscleId, string muscleName) {
            object[] results = this.Invoke("EditMuscleAPIAsync", new object[] {
                        muscleId,
                        muscleName});
            return ((TaskOfBoolean)(results[0]));
        }
        
        /// <remarks/>
        public void EditMuscleAPIAsyncAsync(int muscleId, string muscleName) {
            this.EditMuscleAPIAsyncAsync(muscleId, muscleName, null);
        }
        
        /// <remarks/>
        public void EditMuscleAPIAsyncAsync(int muscleId, string muscleName, object userState) {
            if ((this.EditMuscleAPIAsyncOperationCompleted == null)) {
                this.EditMuscleAPIAsyncOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditMuscleAPIAsyncOperationCompleted);
            }
            this.InvokeAsync("EditMuscleAPIAsync", new object[] {
                        muscleId,
                        muscleName}, this.EditMuscleAPIAsyncOperationCompleted, userState);
        }
        
        private void OnEditMuscleAPIAsyncOperationCompleted(object arg) {
            if ((this.EditMuscleAPIAsyncCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditMuscleAPIAsyncCompleted(this, new EditMuscleAPIAsyncCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EditMuscleAsync", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaskOfBoolean EditMuscleAsync(int muscleId, string muscleName) {
            object[] results = this.Invoke("EditMuscleAsync", new object[] {
                        muscleId,
                        muscleName});
            return ((TaskOfBoolean)(results[0]));
        }
        
        /// <remarks/>
        public void EditMuscleAsyncAsync(int muscleId, string muscleName) {
            this.EditMuscleAsyncAsync(muscleId, muscleName, null);
        }
        
        /// <remarks/>
        public void EditMuscleAsyncAsync(int muscleId, string muscleName, object userState) {
            if ((this.EditMuscleAsyncOperationCompleted == null)) {
                this.EditMuscleAsyncOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditMuscleAsyncOperationCompleted);
            }
            this.InvokeAsync("EditMuscleAsync", new object[] {
                        muscleId,
                        muscleName}, this.EditMuscleAsyncOperationCompleted, userState);
        }
        
        private void OnEditMuscleAsyncOperationCompleted(object arg) {
            if ((this.EditMuscleAsyncCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditMuscleAsyncCompleted(this, new EditMuscleAsyncCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TaskOfBoolean : Task {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaskOfBoolean))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Task {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void AddNewMuscleAPICompletedEventHandler(object sender, AddNewMuscleAPICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewMuscleAPICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewMuscleAPICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void AddNewMuscleCompletedEventHandler(object sender, AddNewMuscleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewMuscleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewMuscleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void DeleteMuscleAPICompletedEventHandler(object sender, DeleteMuscleAPICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMuscleAPICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMuscleAPICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void DeleteMuscleCompletedEventHandler(object sender, DeleteMuscleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMuscleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMuscleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void AddNewExerciseAPICompletedEventHandler(object sender, AddNewExerciseAPICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewExerciseAPICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewExerciseAPICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void AddNewExerciseCompletedEventHandler(object sender, AddNewExerciseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewExerciseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewExerciseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void DeleteExerciseAPICompletedEventHandler(object sender, DeleteExerciseAPICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteExerciseAPICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteExerciseAPICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void DeleteExerciseCompletedEventHandler(object sender, DeleteExerciseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteExerciseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteExerciseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetAllExercisesAPICompletedEventHandler(object sender, GetAllExercisesAPICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllExercisesAPICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllExercisesAPICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetAllExercisesCompletedEventHandler(object sender, GetAllExercisesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllExercisesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllExercisesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void EditExerciseAPIAsyncCompletedEventHandler(object sender, EditExerciseAPIAsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditExerciseAPIAsyncCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditExerciseAPIAsyncCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaskOfBoolean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaskOfBoolean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void EditExerciseAsyncCompletedEventHandler(object sender, EditExerciseAsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditExerciseAsyncCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditExerciseAsyncCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaskOfBoolean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaskOfBoolean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void EditMuscleAPIAsyncCompletedEventHandler(object sender, EditMuscleAPIAsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditMuscleAPIAsyncCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditMuscleAPIAsyncCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaskOfBoolean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaskOfBoolean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void EditMuscleAsyncCompletedEventHandler(object sender, EditMuscleAsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditMuscleAsyncCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditMuscleAsyncCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaskOfBoolean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaskOfBoolean)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591